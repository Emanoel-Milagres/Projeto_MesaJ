package view;

import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerUsuario;
import controller.ControllerVendas;
import controller.ControllerVendasProdutos;
import controller.ControllerVendasUsuario;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelProdutos;
import model.ModelProdutosVendasProdutos;
import model.ModelUsuario;
import model.ModelVendas;
import model.ModelVendasProdutos;
import model.ModelVendasUsuario;
import util.UtilDatas;

/**
 *
 * @author Emanoel
 */
public class ViewVendas extends javax.swing.JFrame {

    ControllerUsuario controllerUsuario = new ControllerUsuario();
    ModelUsuario modelUsuario = new ModelUsuario();
    ArrayList<ModelUsuario> listaModelUsuario = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasUsuario> listaModelVendasUsuario = new ArrayList<>();
    ControllerVendasUsuario controllerVendasUsuario = new ControllerVendasUsuario();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    UtilDatas utilDatas = new UtilDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutos = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();
    String alterarSalvar;

    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        limparFormulario();
        listarUsuarios();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarVendas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfQuantidade = new javax.swing.JTextField();
        jbAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutosVenda = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jbCancelar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jbSalvar = new javax.swing.JButton();
        jtfNumVenda = new javax.swing.JTextField();
        jtfCodPro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jcbUsuario = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jtfServico = new javax.swing.JFormattedTextField();
        jcbMesa = new javax.swing.JComboBox<>();
        jbRemover = new javax.swing.JButton();
        jtfValorTotal = new javax.swing.JFormattedTextField();
        jtfValorBruto = new javax.swing.JFormattedTextField();
        jcbProduto = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jbSalvar1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtfValorBrutoTotal = new javax.swing.JTextField();
        jtfValorTTotal = new javax.swing.JTextField();
        jtfServicoTotal = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PEDIDOS");
        setResizable(false);

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel6.setText("Produto*");

        jLabel8.setText("Serviço(%):");

        jtfQuantidade.setEnabled(false);

        jbAdicionar.setText("Adicionar");
        jbAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAdicionar.setEnabled(false);
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jtProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod Prod", "Nome Produto", "Qtde", "Valor Un", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtProdutosVenda);
        if (jtProdutosVenda.getColumnModel().getColumnCount() > 0) {
            jtProdutosVenda.getColumnModel().getColumn(0).setMinWidth(25);
            jtProdutosVenda.getColumnModel().getColumn(0).setPreferredWidth(25);
            jtProdutosVenda.getColumnModel().getColumn(1).setMinWidth(300);
            jtProdutosVenda.getColumnModel().getColumn(1).setPreferredWidth(300);
            jtProdutosVenda.getColumnModel().getColumn(2).setMinWidth(25);
            jtProdutosVenda.getColumnModel().getColumn(2).setPreferredWidth(25);
            jtProdutosVenda.getColumnModel().getColumn(3).setMinWidth(40);
            jtProdutosVenda.getColumnModel().getColumn(3).setPreferredWidth(40);
            jtProdutosVenda.getColumnModel().getColumn(4).setMinWidth(40);
            jtProdutosVenda.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        jLabel3.setText("Número da Venda");

        jbCancelar.setText("Cancelar");
        jbCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbNovo.setText("Novo");
        jbNovo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jLabel4.setText("Código Prod*");

        jbSalvar.setText("Salvar");
        jbSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jtfNumVenda.setEditable(false);
        jtfNumVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtfNumVenda.setEnabled(false);

        jtfCodPro.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtfCodPro.setEnabled(false);
        jtfCodPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodProFocusLost(evt);
            }
        });
        jtfCodPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodProActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantidade*");

        jLabel7.setText("Valor total:");

        jLabel11.setText("Mesa");

        jLabel12.setText("Atendente*");

        jcbUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbUsuario.setEnabled(false);

        jLabel14.setText("Valor Bruto:");

        jtfServico.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfServico.setEnabled(false);
        jtfServico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfServicoFocusLost(evt);
            }
        });

        jcbMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mesa 01", "Mesa 02", "Mesa 03", "Mesa 04", "Mesa 05", "Mesa 06", "Mesa 07", "Mesa 08", "Mesa 09", "Mesa 10" }));
        jcbMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbMesa.setEnabled(false);

        jbRemover.setText("Remover");
        jbRemover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbRemover.setEnabled(false);
        jbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverActionPerformed(evt);
            }
        });

        jtfValorTotal.setEditable(false);
        jtfValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtfValorTotal.setEnabled(false);

        jtfValorBruto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jtfValorBruto.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jtfCodPro, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jcbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbAdicionar)
                                .addGap(18, 18, 18)
                                .addComponent(jbRemover))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jtfValorBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jtfServico, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jbCancelar)
                .addGap(43, 43, 43)
                .addComponent(jbNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalvar)
                .addGap(77, 77, 77))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jcbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(149, 149, 149)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jcbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfNumVenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(75, 75, 75))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCodPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbAdicionar)
                            .addComponent(jbRemover)
                            .addComponent(jcbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel14))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorBruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pedido Mesa", jPanel1);

        jbSalvar1.setText("Salvar");
        jbSalvar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvar1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Cod Venda");

        jLabel15.setText("Nome:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(798, Short.MAX_VALUE)
                .addComponent(jbSalvar1)
                .addGap(39, 39, 39))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 450, Short.MAX_VALUE)
                .addComponent(jbSalvar1)
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("Pedido Delivery", jPanel2);

        jLabel10.setText("Pesquisa");

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Cod Venda", "Cliente/Mesa", "Atendente", "Data", "Valor Bruto", "Serviço", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtVendas);

        jbExcluir.setText("Excluir");
        jbExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setText("Alterar");
        jbAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor Bruto");

        jLabel2.setText("Serviço");

        jLabel13.setText("Valor Total");

        jtfServicoTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jbPesquisar)
                        .addGap(136, 136, 136))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jbExcluir)
                                .addGap(38, 38, 38)
                                .addComponent(jbAlterar)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfValorBrutoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jtfServicoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jtfValorTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfValorBrutoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfServicoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar))
                .addGap(60, 60, 60))
        );

        jTabbedPane1.addTab("Consultar/Excluir/Alterar", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        habilitarCampos(true);
        alterarSalvar = "alterar";
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.setNumRows(0);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            jtfNumVenda.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVendas()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto(),
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProNome(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor()
                * listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade()

            });
        }
        somarValorTotalProdutos();
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // TODO add your handling code here:
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
            modelProdutos.setProQuantidade(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProQuantidade()
                    + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());

            listaModelProdutos.add(modelProdutos);
        }
        if (controllerProdutos.atualizarQuantidadeProdutoController(listaModelProdutos)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            if (controllerVendas.excluirVendasController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "Venda excluida com sucesso", "Sucesso", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        somarValorTotalVendas();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jtfServicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfServicoFocusLost
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfServicoFocusLost

    private void jtfCodProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodProActionPerformed

    private void jtfCodProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodProFocusLost
        // TODO add your handling code here:
        if (jtfCodPro.getText().equals("")) {
            
        } else {
            modelProdutos = controllerProdutos.getProdutoController(Integer.parseInt(jtfCodPro.getText()));
            jcb.setSelectedItem(modelProdutos.getProNome());
        }
    }//GEN-LAST:event_jtfCodProFocusLost

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // TODO add your handling code here:
        habilitarCampos(true);
        alterarSalvar = "salvar";
        limparFormulario();

    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        // TODO add your handling code here:
        if (jtfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "É necessário preencher todos os campos!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProdutos = controllerProdutos.getProdutoController(Integer.parseInt(jtfCodPro.getText()));
            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jtfQuantidade.getText());
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            modelo.addRow(new Object[]{
                modelProdutos.getIdProduto(),
                modelProdutos.getProNome(),
                jtfQuantidade.getText(),
                modelProdutos.getProValor(),
                quantidade * modelProdutos.getProValor()
            });
            somarValorTotalProdutos();
        }
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
        int codigoVenda, codigoProduto;
        double desconto, servico;
        listaModelVendasProdutos = new ArrayList<>();
        if (jtfServico.getText().equals("")) {
            servico = 0;

        } else {
            servico = Double.parseDouble(jtfServico.getText());
        }
        if (!jtfNumVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(jtfNumVenda.getText()));
        }

        modelVendas.setVenMesa(jcbMesa.getSelectedItem().toString());
        try {

            modelVendas.setVenDataVenda(utilDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception ex) {

        }
        //talvez precise arrumar aqui!!!!!
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorBruto.getText()));
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenTaxa(servico);

        if (alterarSalvar.equals("salvar")) {
            //Salvar
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if (codigoVenda > 0) {
                JOptionPane.showMessageDialog(this, "Pedido realizado com sucesso", "Sucesso", JOptionPane.WARNING_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao fazer o pedido", "Falha", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));

                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setProQuantidade(controllerProdutos.getProdutoController(codigoProduto).getProQuantidade()
                        - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProdutos);
            }

            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                controllerProdutos.atualizarQuantidadeProdutoController(listaModelProdutos);
                JOptionPane.showMessageDialog(this, "produtos da vendas salvo com sucesso", "Sucesso", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
                limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar os produtos da venda", "Falha", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //Inicio
            //Retonrar para o estoque e excluir produtos da venda;
            int linha = jtVendas.getSelectedRow();
            codigoVenda = (int) jtVendas.getValueAt(linha, 0);
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
                modelProdutos = new ModelProdutos();
                modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
                modelProdutos.setProQuantidade(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProQuantidade()
                        + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());

                listaModelProdutos.add(modelProdutos);
            }
            if (controllerProdutos.atualizarQuantidadeProdutoController(listaModelProdutos)) {
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                    JOptionPane.showMessageDialog(this, "Venda excluida com sucesso", "Sucesso", JOptionPane.WARNING_MESSAGE);
                    this.carregarVendas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
            //Fim

            if (controllerVendas.atualizarVendasController(modelVendas)) {
                JOptionPane.showMessageDialog(this, "Venda alterada com sucesso", "Sucesso", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar a venda", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVendas(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));

                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setProQuantidade(controllerProdutos.getProdutoController(codigoProduto).getProQuantidade()
                        - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProdutos);
            }
            //salvar os produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                JOptionPane.showMessageDialog(this, "Produto(s) da venda da salvo(s) com sucesso", "Sucesso", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
                limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar o(s) produto(s) da venda", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        }

        habilitarCampos(false);
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverActionPerformed
        // TODO add your handling code here:
        int linha = jtProdutosVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.removeRow(linha);
        somarValorTotalProdutos();


    }//GEN-LAST:event_jbRemoverActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        limparFormulario();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbSalvar1ActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) this.jtVendas.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter(modelo);
        this.jtVendas.setRowSorter(classificador);
        String texto = jtfPesquisa.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }//GEN-LAST:event_jbPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    private void listarUsuarios() {
        listaModelUsuario = controllerUsuario.getListaUsuarioController();
        jcbUsuario.removeAllItems();
        jcbUsuario.addItem("");
        for (int i = 0; i < listaModelUsuario.size(); i++) {
            if (!"".equals(listaModelUsuario.get(i).getUsuNome())) {
                jcbUsuario.addItem(listaModelUsuario.get(i).getUsuNome());
            }
        }
    }

    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.getListaProdutoController();
        jcb.removeAll();
        jcb.addItem("");
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcb.addItem(listaModelProdutos.get(i).getProNome());
        }
    }

    private void aplicarServico(double pSoma) {
        try {
            double servico, soma;
            double porcentagemTaxa = Double.parseDouble(jtfServico.getText());
            soma = pSoma;
            servico = soma * (1 + (porcentagemTaxa / 100));
            jtfValorTotal.setText(String.valueOf(servico));

        } catch (Exception e) {

        }
    }

    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jtProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) jtProdutosVenda.getValueAt(i, 4);
            soma += valor;
        }

        jtfValorBruto.setText(String.valueOf(soma));
        aplicarServico(soma);
    }

    private void somarValorTotalVendas() {
        double valorTotal = 0, servico = 0, valorBruto = 0, valorL, valorS, valorB;
        int cont = jtVendas.getRowCount();
        for (int i = 0; i < cont; i++) {
            valorB = (double) jtVendas.getValueAt(i, 4);
            valorL = (double) jtVendas.getValueAt(i, 6);
            valorBruto += valorB;
            valorTotal += valorL;
        }
        valorS = valorTotal - valorBruto;
        jtfValorBrutoTotal.setText(String.valueOf(valorBruto));
        jtfServicoTotal.setText(String.valueOf(valorS));
        jtfValorTTotal.setText(String.valueOf(valorTotal));
    }

    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        listaModelVendasUsuario = controllerVendasUsuario.getListaVendasUsuario();
        int cont = listaModelVendasUsuario.size();
        modelo.setNumRows(0);
        for (int i = 1; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasUsuario.get(i).getModelVendas().getIdVenda(),
                listaModelVendasUsuario.get(i).getModelVendas().getVenMesa(),
                listaModelVendasUsuario.get(i).getModelUsuario().getUsuNome(),
                listaModelVendasUsuario.get(i).getModelVendas().getVenDataVenda(),
                listaModelVendasUsuario.get(i).getModelVendas().getVenValorBruto(),
                listaModelVendasUsuario.get(i).getModelVendas().getVenTaxa(),
                listaModelVendasUsuario.get(i).getModelVendas().getVenValorLiquido()
            });
        }
        somarValorTotalVendas();
        limparFormulario();
    }

    private void limparFormulario() {
        jtfQuantidade.setText("");
        jtfNumVenda.setText("");
        jtfServico.setText("10");
        jtfValorBruto.setText("");
        jtfValorTotal.setText("");
        jtfCodPro.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.setNumRows(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbRemover;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbSalvar1;
    private javax.swing.JComboBox<String> jcbMesa;
    private javax.swing.JComboBox<String> jcbProduto;
    private javax.swing.JComboBox<String> jcbUsuario;
    private javax.swing.JTable jtProdutosVenda;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTextField jtfCodPro;
    private javax.swing.JTextField jtfNumVenda;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfQuantidade;
    private javax.swing.JFormattedTextField jtfServico;
    private javax.swing.JFormattedTextField jtfServicoTotal;
    private javax.swing.JFormattedTextField jtfValorBruto;
    private javax.swing.JTextField jtfValorBrutoTotal;
    private javax.swing.JTextField jtfValorTTotal;
    private javax.swing.JFormattedTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables

    private void habilitarCampos(boolean pCampo) {
        jbSalvar.setEnabled(pCampo);
        jbAdicionar.setEnabled(pCampo);
        jbRemover.setEnabled(pCampo);
        jcbMesa.setEnabled(pCampo);
        jcbUsuario.setEnabled(pCampo);
        jtfCodPro.setEnabled(pCampo);
        jcb.setEnabled(pCampo);
        jtfQuantidade.setEnabled(pCampo);
        jtfServico.setEnabled(pCampo);

    }

}
